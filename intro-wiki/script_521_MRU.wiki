
= [http://www.vim.org/scripts/script.php?script_id=521 MRU.vim] =

作者：[http://www.vim.org/account/profile.php?user_id=224 Yegappan Lakshmanan]

脚本类型：公用(utility)

== 概述 ==

最近常用(MRU) 插件提供了便于在 Vim 中访问最近打开/编辑的文件列表的功能。
这个插件自动存储在 Vim 中打开/编辑的文件名。

这个插件支持所有的平台上的 Vim 版本，同时支持控制台和 GUI 版本。这个版本
的 MRU 插件需要 Vim 7.0 及以上版本，如果你使用较早的 Vim 版本，你需要使用
较早的 MRU 插件版本。

最近使用的文件名存储在一个指定文件中，可以通过 MRU_File 变量设置。

== 使用方法 ==

你可以通过 `:MRU` 命令从 MRU 列表中列出并编辑文件。`:MRU` 命令显示最近使用
的文件列表在一个临时的 Vim 窗口中，如果 MRU 窗口已经被打开，则刷新这个 MRU
列表。

如果你使用 GUI 版本的 Vim，这最近编辑过的文件会被添加到“文件->最近使用的文件”
菜单，你可以通过选择其子菜单中的文件名来编辑文件。

在 MRU 窗口中可以使用普通模式(normal)的 Vim 命令来移动光标，但不能改变其内容。

可以通过在选中的文件上按回车键或双击鼠标左键来编辑文件，选中的文件将被打开，
如果这个文件已被打开，光标会移动到其窗口中，否则，这个文件会在预览窗口中打开。
如果预览窗口已被修改，或者预览窗口是由其他插件打开的，则文件在新窗口中打开。

通过按 'o' 键，选中的文件将在 MRU 窗口之下的新窗口中打开。

在 MRU 窗口中按 'v' 键可以在只读模式下打开文件。

在 MRU 窗口这按 't' 键让文件在新标签页(tab)中打开。如果文件已经在窗口、或者在
当前或其他标签页中打开，光标将移到这个标签页，否则，在新的标签页中打开。

You can open multiple files from the MRU window by specifying a count before
pressing '<Enter>' or 'v' or 'o' or 't'. You can also visually select
multiple filenames and invoke the commands to open the files. Each selected
file will be opened in a separate window or tab.

You can press the 'u' key in the MRU window to update the file list. This is
useful if you keep the MRU window open always.

You can close the MRU window by pressing the 'q' key or using one of the Vim
window commands.

To display only files matching a pattern from the MRU list in the MRU
window, you can specify a pattern to the ":MRU" command. For example, to
display only file names containing "vim" in them, you can use the following
command ":MRU vim".  When you specify a partial file name and only one
matching filename is found, then the ":MRU" command will edit that file.

The ":MRU" command supports command-line completion of file names from
the MRU list. You can enter a partial file name and then press <Tab>
or <Ctrl-D> to complete or list all the matching file names. Note that
after typing the ":MRU" command, you have to enter a space before completing
the file names with <Tab>.

When a file supplied to the ":MRU" command is not present in the MRU list,
but it is a readable file, then the file will be opened (even though it is
not present in the MRU list). This is useful if you want to open a file
present in the same directory as a file in the MRU list. You can use the
command-line completion of the ":MRU" command to complete the full path of a
file and then modify the path to open another file present in the same path.

Whenever the MRU list changes, the MRU file is updated with the latest MRU
list. When you have multiple instances of Vim running at the same time, the
latest MRU list will show up in all the instances of Vim.

== 选项设置 ==

By changing the following variables you can configure the behavior of this
plugin. Set the following variables in your .vimrc file using the 'let'
command.

The list of recently edited file names is stored in the file specified by the
MRU_File variable.  The default setting for this variable is
$HOME/.vim_mru_files for Unix-like systems and $USERPROFILE/_vim_mru_files
for MS-Windows systems. You can change this variable to point to a file by
adding the following line to the .vimrc file:

      let MRU_File = 'd:\myhome\_vim_mru_files'

By default, the plugin will remember the names of the last 100 used files.
As you edit more files, old file names will be removed from the MRU list.
You can set the 'MRU_Max_Entries' variable to remember more file names. For
example, to remember 1000 most recently used file names, you can use

      let MRU_Max_Entries = 1000

By default, all the edited file names will be added to the MRU list. If you
want to exclude file names matching a list of patterns, you can set the
MRU_Exclude_Files variable to a list of Vim regular expressions. By default,
this variable is set to an empty string. For example, to not include files
in the temporary (/tmp, /var/tmp and d:\temp) directories, you can set the
MRU_Exclude_Files variable to

      let MRU_Exclude_Files = '^/tmp/.*\|^/var/tmp/.*'  " For Unix
      let MRU_Exclude_Files = '^c:\\temp\\.*'           " For MS-Windows

The specified pattern should be a Vim regular expression pattern.

If you want to add only file names matching a set of patterns to the MRU
list, then you can set the MRU_Include_Files variable. This variable should
be set to a Vim regular expression pattern. For example, to add only .c and
.h files to the MRU list, you can set this variable as below:

      let MRU_Include_Files = '\.c$\|\.h$'

By default, MRU_Include_Files is set to an empty string and all the edited
filenames are added to the MRU list.

The default height of the MRU window is 8. You can set the MRU_Window_Height
variable to change the window height.

      let MRU_Window_Height = 15

By default, when the :MRU command is invoked, the MRU list will be displayed
in a new window. Instead, if you want the MRU plugin to reuse the current
window, then you can set the 'MRU_Use_Current_Window' variable to one.

      let MRU_Use_Current_Window = 1

The MRU plugin will reuse the current window. When a file name is selected,
the file is also opened in the current window.

When you select a file from the MRU window, the MRU window will be
automatically closed and the selected file will be opened in the previous
window. You can set the 'MRU_Auto_Close' variable to zero to keep the MRU
window open.

      let MRU_Auto_Close = 0

If you don't use the "File->Recent Files" menu and want to disable it,
then you can set the 'MRU_Add_Menu' variable to zero. By default, the
menu is enabled.

      let MRU_Add_Menu = 0

If too many file names are present in the MRU list, then updating the MRU
menu to list all the file names makes Vim slow. To avoid this, the
MRU_Max_Menu_Entries variable controls the number of file names to show in
the MRU menu. By default, this is set to 10. You can change this to show
more entries in the menu.

      let MRU_Max_Menu_Entries = 20

If many file names are present in the MRU list, then the MRU menu is split
into sub-menus. Each sub-menu contains MRU_Max_Submenu_Entries file names.
The default setting for this is 10. You can change this to increase the
number of file names displayed in a single sub-menu:

      let MRU_Max_Submenu_Entries = 15


== 安装细节 ==
1. Copy the mru.vim file to one of the following directories:

      $HOME/.vim/plugin     - Unix like systems
      $HOME/vimfiles/plugin - MS-Windows
      $VIM:vimfiles:plugin  - Macintosh
      $VIM/vimfiles/plugin  - All

   Refer to the following Vim help topics for more information about Vim
   plugins:

      :help add-plugin
      :help add-global-plugin
      :help runtimepath

2. Set the MRU_File Vim variable in the .vimrc file to the location of a
   file to store the most recently edited file names. This step is needed
   only if you want to change the default MRU filename.
3. Restart Vim.
4. You can use the ":MRU" command to list and edit the recently used files.
   In GUI Vim, you can use the 'File->Recent Files' menu to access the
   recently used files.

To uninstall this plugin, remove this file (mru.vim) from the
$HOME/.vim/plugin or $HOME/vimfiles/plugin or the $VIM/vimfile/plugin
directory.
